packrat::init()
install.packages("caret")
install.packages("rpart")
install.packages("tree")
install.packages("randomForest")
install.packages("e1071")
install.packages("ggplot2")
install.packages("RcppEigen")
seaflow_dat <- read.csv("seaflow_21min.csv")
View(seaflow_dat)
summary(seaflow_dat)
library(ggplot2)
library(caret)
data(oil)
oil
oilType
createDataPartition(oilType, 2)
createDataPartition(oilType, 3)
groups <- createDataPartition(seaflow_dat, 2)
str(seaflow_dat)
seaflow_dat <- read.csv("seaflow_21min.csv", stringsAsFactors = FALSE)
str(seaflow_dat)
groups <- createDataPartition(seaflow_dat, 2)
str(seaflow_dat$pop)
labels <- seaflow_dat$pop
groups <- createDataPartition(seaflow_dat$pop, 2)
seaflow_dat <- read.csv("seaflow_21min.csv")
groups <- createDataPartition(seaflow_dat$pop, 2)
groups[1]
summary(groups[1])
summary(groups[2])
train <- seaflow_dat[groups[1], ]
groups <- createDataPartition(seaflow_dat$pop, 2, list = FALSE)
groups
groups <- createDataPartition(seaflow_dat$pop, 2)
train <- seaflow_dat[groups[[1]], ]
test <- seaflow_dat[groups[[2]], ]
summary(train)
summary(test)
groups <- createDataPartition(seaflow_dat$pop, 2)
train <- seaflow_dat[groups[[1]], ]
test <- seaflow_dat[groups[[2]], ]
summary(train)
summary(test)
groups <- createDataPartition(seaflow_dat$pop, 2)
train <- seaflow_dat[groups[[1]], ]
test <- seaflow_dat[groups[[2]], ]
summary(train)
summary(test)
ggplot(data = train, aes(x = chl_small, y = pe)) +
geom_point(aes(colour = pop))
train_dat <- seaflow_dat[groups[[1]], ]
test_dat <- seaflow_dat[groups[[2]], ]
summary(train_dat)
summary(test_dat)
library(rpart)
formula(fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
formula(fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small,
data = train_dat)
formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small,
data = train_dat)
fol <- formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small,
data = train_dat)
fol <- formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fol, method = "class", data = train_dat)
print(model)
library(ggplot2)
library(caret)
library(rpart)
seaflow_dat <- read.csv("seaflow_21min.csv")
groups <- createDataPartition(seaflow_dat$pop, 2)
train_dat <- seaflow_dat[groups[[1]], ]
test_dat <- seaflow_dat[groups[[2]], ]
ggplot(data = train_dat, aes(x = chl_small, y = pe)) +
geom_point(aes(colour = pop))
fol <- formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fol, method = "class", data = train_dat)
print(model)
yhat <- predict(model, newdata = test_dat)
View(test_dat)
sum(yhat == test_dat$pop)
View(yhat)
yhat <- predict(model, newdata = test_dat, type = "class")
head(yhat)
sum(yhat == test_dat$pop)
sum(yhat == test_dat$pop)/length(test_dat$pop)
library(randomforrest)
library(randomforest)
library(randomForest)
model <- randomForest(fol, data = train_dat)
print(model)
yhat <- predict(model, newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
importance(model)
library(e1071)
model <- svm(fol, data = train_dat)
yhat <- predict(model, newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
model <- rpart(fol, method = "class", data = train_dat)
yhat <- predict(model, newdata = test_dat, type = "class")
table(yhat, test_dat$pop)
tree_table <- table(yhat, test_dat$pop)
sum(yhat == test_dat$pop)/length(test_dat$pop)
model <- randomForest(fol, data = train_dat)
yhat <- predict(model, newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
rf_table <- table(yhat, test_dat$pop)
rf_table
tree_table
svm_table <- table(yhat, test_dat$pop)
svm_table
View(train_dat)
library(ggplot2)
library(caret)
library(rpart)
library(randomForest)
library(e1071)
seaflow_dat <- read.csv("seaflow_21min.csv")
groups <- createDataPartition(seaflow_dat$pop, 2)
train_dat <- seaflow_dat[groups[[1]], ]
test_dat <- seaflow_dat[groups[[2]], ]
fol <- formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- randomForest(fol, data = train_dat)
yhat <- predict(model, newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
yhat <- predict(model, type = "class", newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
model <- randomForest(fol, data = train_dat, importance = TRUE)
print(model)
yhat <- predict(model, type = "class", newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
str(train_dat)
model <- randomForest(fol, method = "class", data = train_dat)
print(model)
yhat <- predict(model, type = "class", newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
model <- svm(fol, data = train_dat)
yhat <- predict(model, newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
View(train_dat)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
packrat::snapshot(prompt = FALSE)
str(seaflow_dat)
file208_idx <- seaflow_dat$file_id %in% 208
sum(file208_idx)
seaflow_new <- seaflow_dat[!file208_idx, ]
groups <- createDataPartition(seaflow_new$pop, 2)
train_new <- seaflow_new[groups[[1]], ]
test_new <- seaflow_new[groups[[2]], ]
model_new <- svm(fol, data = train_new)
yhat <- predict(model_new, newdata = test_new)
sum(yhat == test_new$pop)/length(test_new$pop)
sum(yhat == test_new$pop)/length(test_new$pop) - 0.9207
library(dplyr)
seaflow_new <- seaflow_dat %>% filter(file_id != 208)
groups <- createDataPartition(seaflow_new$pop, 2)
train_new <- seaflow_new[groups[[1]], ]
test_new <- seaflow_new[groups[[2]], ]
model_new <- svm(fol, data = train_new)
yhat <- predict(model_new, newdata = test_new)
sum(yhat == test_new$pop)/length(test_new$pop) - 0.9207
library(ggplot2)
library(caret)
library(rpart)
library(randomForest)
library(e1071)
library(dplyr)
packrat::snapshot(prompt = FALSE)
seaflow_dat <- read.csv("seaflow_21min.csv")
groups <- createDataPartition(seaflow_dat$pop, 2)
train_dat <- seaflow_dat[groups[[1]], ]
test_dat <- seaflow_dat[groups[[2]], ]
fol <- formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- randomForest(fol, method = "class", data = train_dat)
yhat <- predict(model, type = "class", newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
model <- svm(fol, data = train_dat)
yhat <- predict(model, newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
seaflow_new <- seaflow_dat %>% filter(file_id != 208)
groups <- createDataPartition(seaflow_new$pop, 2)
train_new <- seaflow_new[groups[[1]], ]
test_new <- seaflow_new[groups[[2]], ]
model_new <- svm(fol, data = train_new)
yhat <- predict(model_new, newdata = test_new)
sum(yhat == test_new$pop)/length(test_new$pop) - 0.922
model <- randomForest(fol, method = "class", data = train_dat)
yhat <- predict(model, type = "class", newdata = test_dat)
length(test_dat$pop)
length(yhat)
rf_table <- table(yhat, test_dat$pop)
rf_table
model <- svm(fol, data = train_dat)
yhat <- predict(model, newdata = test_dat)
svm_table <- table(yhat, test_dat$pop)
svm_table
x = c(TRUE, TRUE, FALSE, TRUE)
y = c(TRUE, FALSE, FALSE, TRUE)
table(x, y)
model <- randomForest(fol, method = "class", data = train_dat)
print(model)
yhat <- predict(model, type = "class", newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
head(yhat)
head(testdat$pop)
head(test_dat$pop)
tail(yhat)
tail(test_dat$pop)
model <- randomForest(fol, method = "class", data = train_dat, nodesize = 10)
yhat <- predict(model, type = "class", newdata = test_dat)
sum(yhat == test_dat$pop)/length(test_dat$pop)
